<?php

namespace Versionable\Ferret\Detector;

/**
 * Test class for Composite.
 * Generated by PHPUnit on 2010-10-16 at 18:26:35.
 * 
 * @group Ferret
 * @group Composite
 */
class CompositeTest extends \PHPUnit_Framework_TestCase {

  /**
   * @var Composite
   */
  protected $object;

  /**
   * Sets up the fixture, for example, opens a network connection.
   * This method is called before a test is executed.
   * 
   */
  protected function setUp() {
    $this->object = new Composite;
  }

  /**
   * Tears down the fixture, for example, closes a network connection.
   * This method is called after a test is executed.
   */
  protected function tearDown() {
    
  }

  public function testDetect()
  {
    
    $stub = $this->getMock("Versionable\Ferret\Detector\DetectorInterface");

    $stub->expects($this->any())
         ->method('detect')
         ->will($this->returnValue(false));
    
    $this->object->addDetector($stub);
    
    $stub = $this->getMock("Versionable\Ferret\Detector\DetectorInterface");

    $stub->expects($this->any())
         ->method('detect')
         ->will($this->returnValue('text/plain'));
    
    $this->object->addDetector($stub);
    
    $this->assertEquals('text/plain', $this->object->detect('data/unit.txt'));
  }

  public function testDetectFail()
  {
    
    $stub = $this->getMock("Versionable\Ferret\Detector\DetectorInterface");

    $stub->expects($this->any())
         ->method('detect')
         ->will($this->returnValue(false));
    
    $this->object->addDetector($stub);
    
    $stub = $this->getMock("Versionable\Ferret\Detector\DetectorInterface");

    $stub->expects($this->any())
         ->method('detect')
         ->will($this->returnValue(false));
    
    $this->object->addDetector($stub);
    $this->assertFalse($this->object->detect('data/unit.false'));
  } 

}
